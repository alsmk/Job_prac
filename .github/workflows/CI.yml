name: CI workflow



on:
    push:
        branches:
            - main
    pull_request_target:
        types:
          - closed


jobs:
    linter:
        runs-on: ubuntu-latest
        if: github.event_name == 'push'
        steps:
            - name: checkout to branch
              uses: actions/checkout@v2
            
            - name: cache dependency
              id: cache
              uses: actions/cache@v2
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

            - name: install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt
            
            - name: run linter
              run: |
                pylint ./scripts/printing_info.py --fail-under=8.0
        
    printing_info:
        runs-on: ubuntu-latest
        if: github.event_name == 'push'
        steps:
            - name: checkout to branch
              uses: actions/checkout@v2
            
            - name: cache dependency
              id: cache
              uses: actions/cache@v2
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
                  
            - name: install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt
            
            - name: run printing_info
              run: |
               python ./scripts/printing_info.py
              env:
               TOKEN: ${{ secrets.TOKEN }}
        

    testing:
      if: github.event.pull_request.merged == true

      runs-on: ubuntu-latest
      steps:
        - name: checkout to branch
          uses: actions/checkout@v3
        - name: Set PYTHONPATH
          run: |
           echo "PYTHONPATH=$PWD" >> $GITHUB_ENV
        - name: install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install pytest
        - name: run tests
          run: |
            python -m unittest discover -s ./scripts/
          env:
            TOKEN: ${{ secrets.TOKEN }}